var N = null;var searchIndex = {};
searchIndex["json_in_type"]={"doc":"json_in_type is a library for very fast JSON serialization. It does only serialization, not parsing.","items":[[3,"JSON","json_in_type","Encapsulates a JSONValue and implements useful traits.",N,N],[12,"0","","",0,N],[0,"base_types","","Serialization of numbers, booleans, and null",N,N],[3,"JSONtrue","json_in_type::base_types","A JSON value representing the value `true` This is a Zero-Sized type. It takes zero bytes in memory at runtime.",N,N],[3,"JSONfalse","","A JSON value representing the value `false` This is a Zero-Sized type. It takes zero bytes in memory at runtime.",N,N],[0,"list","json_in_type","Serialization to JSON lists like `[0,true,\"x\"]`",N,N],[3,"ToJSONList","json_in_type::list","A struct used to wrap another type and make it serializable as a json list.",N,N],[12,"0","","",1,N],[3,"JSONListElem","","",N,N],[3,"JSONListEnd","","",N,N],[8,"JSONList","","",N,N],[10,"write_json_ending","","",2,[[["self"],["w"]],["result"]]],[11,"new","","",3,[[["t"],["u"]],["jsonlistelem"]]],[0,"object","json_in_type","Serialization to JSON objects like `{\"x\":1,\"y\":null}`",N,N],[3,"ToJSONObject","json_in_type::object","A struct used to wrap another type and make it serializable as a json object. The other type has to be able to yield (key, value) pairs by implementing IntoIterator.",N,N],[12,"0","","",4,N],[3,"JSONObjectEntry","","A JSON object stored as a static linked list. This is a generic structure that specializes at compile-time to a structure whose type stores the exact shape of the object.",N,N],[12,"key","","",5,N],[12,"value","","",5,N],[12,"next","","",5,N],[3,"JSONObjectEnd","","An empty JSON object. This is a Zero Sized Type. It just serves to mark the end of an object in its type, but takes no space in memory at runtime.",N,N],[8,"JSONObject","","",N,N],[10,"write_json_ending","","",6,[[["self"],["w"],["bool"]],["result"]]],[11,"write_json_full","","",6,[[["self"],["w"]],["result"]]],[0,"string","json_in_type","Serialization to JSON strings like `\"hello world \\n\"`",N,N],[8,"JSONString","json_in_type::string","Implemented by types that can be serialized to a json string.",N,N],[0,"utils","json_in_type","Useful tools when working with the types in this crate",N,N],[3,"FormatterWriter","json_in_type::utils","Converts a Formatter to a Writer",N,N],[12,"0","","",7,N],[8,"JSONValue","json_in_type","A trait implemented by types that can be serialized to JSON",N,N],[10,"write_json","","Write the object as json to the given writer",8,[[["self"],["w"]],["result"]]],[11,"to_json_string","","Returns the object formatted as a json string",8,[[["self"]],["string"]]],[11,"to_json_buffer","","Returns a buffer containing the bytes of a json representation of the object",8,[[["self"]],["vec",["u8"]]]],[14,"json_list","","Creates a static json list that can be serialized very fast. Returns a struct implementing `JSONValue`.",N,N],[14,"json_object","","Creates a static json object that can be serialized very fast. Returns a struct implementing `JSONValue`.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","json_in_type::base_types","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","json_in_type::list","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","json_in_type::object","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","json_in_type::utils","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"write_json_ending","json_in_type::list","",3,[[["self"],["w"]],["result"]]],[11,"write_json_ending","","",11,[[["self"],["w"]],["result"]]],[11,"write_json_ending","json_in_type::object","",5,[[["self"],["w"],["bool"]],["result"]]],[11,"write_json_ending","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"write_json","json_in_type::base_types","",9,[[["self"],["w"]],["result"]]],[11,"write_json","","",10,[[["self"],["w"]],["result"]]],[11,"write_json","json_in_type::list","",1,[[["self"],["w"]],["result"]]],[11,"write_json","","",3,[[["self"],["w"]],["result"]]],[11,"write_json","","",11,[[["self"],["w"]],["result"]]],[11,"write_json","json_in_type::object","",4,[[["self"],["w"]],["result"]]],[11,"write_json","","",5,[[["self"],["w"]],["result"]]],[11,"write_json","","",12,[[["self"],["w"]],["result"]]],[11,"fmt","json_in_type","",0,[[["self"],["formatter"]],["result"]]],[11,"write","json_in_type::utils","",7,N],[11,"flush","","",7,[[["self"]],["result"]]]],"paths":[[3,"JSON"],[3,"ToJSONList"],[8,"JSONList"],[3,"JSONListElem"],[3,"ToJSONObject"],[3,"JSONObjectEntry"],[8,"JSONObject"],[3,"FormatterWriter"],[8,"JSONValue"],[3,"JSONtrue"],[3,"JSONfalse"],[3,"JSONListEnd"],[3,"JSONObjectEnd"]]};
searchIndex["json_in_type_derive"]={"doc":"This module provides a procedural macro to derive JSONValue for custom structs.","items":[[5,"jsonvalue_macro_derive","json_in_type_derive","Derive JSONValue for a structure",N,[[["tokenstream"]],["tokenstream"]]]],"paths":[]};
initSearch(searchIndex);
